// experiments: typing

print 1 + 2; // output: 3
print 1 - 2; // output: -1
print 2 * 3; // output: 6
print 3 / 4; // output: 0.75

print (1 + 2)*(3 - 4 - 5); // output: -18

print 2 > 3;  // output: false
print 3 >= 3; // output: true
print 4 < 5;  // output: true
print 6 <= 5; // output: false

fun makeCounter() {
    var count = 0;

    fun counter() {
        count = count + 1;
        return count;
    }
    return counter;
}

var cnt = makeCounter();
print cnt();        // output: 1
print cnt();        // output: 2
print cnt();        // output: 3
print cnt();        // output: 4
print cnt()+cnt();  // output: 11

var a = 10;
var b = a;
var c = a * b;
print c;       // output: 100

// Testing functions with type (T1, T2) -> bool.
print 1 == 2;       // output: false
print 1 == "1";     // output: false
print nil != false; // output: true
print 1/3 == 0.333; // output: false

// Testing functions with union types.
// "+": ((Number, Number) -> Number|(String, String) -> String)
// "-": ((Number, Number) -> Number|(Number) -> Number)
print "a" + "b";  // output: ab
print -1;         // output: -1

// Testing functions with type (T, T) -> T.
print "abc" or "def" and "ghi"; // output: abc
print 123 and 456 or 789;       // output: 456
print true and false or true;   // output: true

// Ensure that id's type '(T) -> T' does not change with different instantiations.
fun id(x) {
    return x;
}

print id("str") + "str";  // output: strstr
print id(123) + 456;      // output: 579


